import { ICredentialsDecrypted, IN8nHttpFullResponse, INode, INodeExecuteFunctions, INodeExecutionData, INodeParameters, INodePropertyOptions, INodeType, IRequestOptionsFromParameters, IRunExecutionData, ITaskDataConnections, IWorkflowDataProxyAdditionalKeys, IWorkflowExecuteAdditionalData, NodeParameterValue, Workflow, WorkflowExecuteMode } from '.';
import { IDataObject, IExecuteData, IExecuteSingleFunctions, IN8nRequestOperations, INodeProperties, PostReceiveAction } from './Interfaces';
export declare class RoutingNode {
    additionalData: IWorkflowExecuteAdditionalData;
    connectionInputData: INodeExecutionData[];
    node: INode;
    mode: WorkflowExecuteMode;
    runExecutionData: IRunExecutionData;
    workflow: Workflow;
    constructor(workflow: Workflow, node: INode, connectionInputData: INodeExecutionData[], runExecutionData: IRunExecutionData, additionalData: IWorkflowExecuteAdditionalData, mode: WorkflowExecuteMode);
    runNode(inputData: ITaskDataConnections, runIndex: number, nodeType: INodeType, executeData: IExecuteData, nodeExecuteFunctions: INodeExecuteFunctions, credentialsDecrypted?: ICredentialsDecrypted): Promise<INodeExecutionData[][] | null | undefined>;
    mergeOptions(destinationOptions: IRequestOptionsFromParameters, sourceOptions?: IRequestOptionsFromParameters): void;
    runPostReceiveAction(executeSingleFunctions: IExecuteSingleFunctions, action: PostReceiveAction, inputData: INodeExecutionData[], responseData: IN8nHttpFullResponse, parameterValue: string | IDataObject | undefined, itemIndex: number, runIndex: number): Promise<INodeExecutionData[]>;
    rawRoutingRequest(executeSingleFunctions: IExecuteSingleFunctions, requestData: IRequestOptionsFromParameters, itemIndex: number, runIndex: number, credentialType?: string, credentialsDecrypted?: ICredentialsDecrypted): Promise<INodeExecutionData[]>;
    makeRoutingRequest(requestData: IRequestOptionsFromParameters, executeSingleFunctions: IExecuteSingleFunctions, itemIndex: number, runIndex: number, credentialType?: string, requestOperations?: IN8nRequestOperations, credentialsDecrypted?: ICredentialsDecrypted): Promise<INodeExecutionData[]>;
    getParameterValue(parameterValue: NodeParameterValue | INodeParameters | NodeParameterValue[] | INodeParameters[], itemIndex: number, runIndex: number, executeData: IExecuteData, additionalKeys?: IWorkflowDataProxyAdditionalKeys, returnObjectAsString?: boolean): NodeParameterValue | INodeParameters | NodeParameterValue[] | INodeParameters[] | string;
    getRequestOptionsFromParameters(executeSingleFunctions: IExecuteSingleFunctions, nodeProperties: INodeProperties | INodePropertyOptions, itemIndex: number, runIndex: number, path: string, additionalKeys?: IWorkflowDataProxyAdditionalKeys): IRequestOptionsFromParameters | undefined;
}
