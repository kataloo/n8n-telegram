import { ILoadOptions, INode, INodeCredentials, INodeParameters, INodePropertyOptions, INodeTypeNameVersion, INodeTypes, IWorkflowExecuteAdditionalData, Workflow } from 'n8n-workflow';
export declare class LoadNodeParameterOptions {
    currentNodeParameters: INodeParameters;
    path: string;
    workflow: Workflow;
    constructor(nodeTypeNameAndVersion: INodeTypeNameVersion, nodeTypes: INodeTypes, path: string, currentNodeParameters: INodeParameters, credentials?: INodeCredentials);
    getWorkflowData(): {
        name: string;
        active: boolean;
        connections: {};
        nodes: INode[];
        createdAt: Date;
        updatedAt: Date;
    };
    getOptionsViaMethodName(methodName: string, additionalData: IWorkflowExecuteAdditionalData): Promise<INodePropertyOptions[]>;
    getOptionsViaRequestProperty(loadOptions: ILoadOptions, additionalData: IWorkflowExecuteAdditionalData): Promise<INodePropertyOptions[]>;
}
